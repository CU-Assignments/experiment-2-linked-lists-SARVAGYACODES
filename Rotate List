class Solution {
    public ListNode rotateRight(ListNode head, int k) {
        if (head == null || head.next == null || k == 0) return head;
        
        // Compute the length of the list
        ListNode current = head;
        int length = 1;
        while (current.next != null) {
            current = current.next;
            length++;
        }
        
        // Make it a circular linked list
        current.next = head;
        
        // Find the new head
        k = k % length;
        int stepsToNewHead = length - k;
        current = head;
        for (int i = 1; i < stepsToNewHead; i++) {
            current = current.next;
        }
        
        // Break the cycle and return new head
        head = current.next;
        current.next = null;
        
        return head;
    }
}
